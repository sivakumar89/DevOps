trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Define Key Vault name
  keyVaultName: 'my-key-vault'

stages:
  - stage: RetrieveSecrets
    displayName: "Retrieve Secrets from Azure Key Vault"
    jobs:
      - job: RetrieveSecretsJob
        displayName: "Retrieve Secrets Job"
        steps:
          # Azure Key Vault Task: Retrieve secrets
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'my-azure-service-connection'
              KeyVaultName: '$(keyVaultName)'
              SecretsFilter: '*'
              RunAsPreJob: false

          # Verify secret retrieval (Optional, for logging purposes)
          - script: |
              echo "Database Connection String: $(DatabaseConnectionString)"
            displayName: "Log Retrieved Secret (Sensitive data should not be echoed in real scenarios)"

  - stage: Deploy
    displayName: "Deploy Application"
    dependsOn: RetrieveSecrets
    condition: succeeded()
    jobs:
      - job: DeployJob
        displayName: "Deploy Application Job"
        steps:
          # Use the retrieved secret in deployment
          - script: |
              echo "Using secret for deployment..."
              # Example: Use the secret in an appsettings.json or a config file
              sed -i "s|<DB_CONNECTION_STRING>|$(DatabaseConnectionString)|g" ./appsettings.json
            displayName: "Inject Secrets into Config File"

          # Simulate deployment
          - script: |
              echo "Deploying application..."
              echo "Deployment successful with secret: $(DatabaseConnectionString)"
            displayName: "Simulate Deployment"
